# tasks file
---
- name: install | dependencies
  ansible.builtin.apt:
    name: "{{ rstudio_workbench_dependencies }}"
    state: "{{ apt_install_state | default('latest') }}"
    update_cache: true
    cache_valid_time: "{{ apt_update_cache_valid_time | default(3600) }}"

- name: install | additional
  ansible.builtin.apt:
    name: "{{ rstudio_workbench_install }}"
    state: "{{ apt_install_state | default('latest') }}"

- name: install | sssd
  ansible.builtin.apt:
    name: "{{ item }}"
    state: "{{ apt_install_state | default('latest') }}"
    cache_valid_time: "{{ apt_update_cache_valid_time | default(3600) }}"
    update_cache: true
  with_items:
    - sssd-ad
    - sssd-tools
    - sssd-dbus
    - realmd
    - adcli
  when:
    - rstudio_workbench_sssd_config is defined or
      rstudio_workbench_sssd_install is sameas true

- name: install | create (download) directory
  ansible.builtin.file:
    path: "{{ rstudio_workbench_downloads_path }}"
    state: directory
    owner: root
    group: root
    mode: 0755

- name: install | download deb
  ansible.builtin.command: >
    curl --silent --show-error --fail --location
    {{ rstudio_workbench_download_url }}
    -o {{ rstudio_workbench_downloads_path }}/rstudio-workbench-{{ rstudio_workbench_version }}-{{ rstudio_workbench_machine_map[ansible_machine] }}.deb
  args:
    creates: "{{ rstudio_workbench_downloads_path }}/rstudio-workbench-{{ rstudio_workbench_version }}-{{ rstudio_workbench_machine_map[ansible_machine] }}.deb"
    warn: false

- name: install | install deb
  ansible.builtin.apt:
    deb: "{{ rstudio_workbench_downloads_path }}/rstudio-workbench-{{ rstudio_workbench_version }}-{{ rstudio_workbench_machine_map[ansible_machine] }}.deb"
